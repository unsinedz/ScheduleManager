@{
    Func<ModelMetadata, bool> shouldShow = metadata =>
    {
        return metadata.ShowForEdit
            && !metadata.IsComplexType;
    };
}
@if (ViewData.TemplateInfo.TemplateDepth > 1)
{
    if (Model == null)
    {
        @ViewData.ModelMetadata.NullDisplayText
    }
    else
    {
        @ViewData.ModelMetadata.SimpleDisplayProperty
    }
}
else
{
    foreach (var prop in ViewData.ModelMetadata.Properties.Where(shouldShow))
    {
        if (prop.HideSurroundingHtml)
        {
            @Html.Editor(prop.PropertyName)
        }
        else
        {
            var labelHtml = Html.Label(prop.PropertyName);
            <div class="input-field">
                @Html.Editor(prop.PropertyName, new { htmlAttributes = new { placeholder = Html.DisplayName(prop.PropertyName) } }) @Html.ValidationMessage(prop.PropertyName, "*")
                @if (!string.IsNullOrEmpty(labelHtml.ToString()))
                {
                    @labelHtml
                }
            </div>
        }
    }
}